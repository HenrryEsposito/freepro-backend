// <auto-generated />
using System;
using FreePro.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FreePro.Repository.Migrations
{
    [DbContext(typeof(FreeProContext))]
    partial class FreeProContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("FreePro.Domain.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<DateTime?>("EndDate");

                    b.Property<int>("MeetingId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<DateTime?>("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("FreePro.Domain.Hoster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("ImgUrl");

                    b.Property<string>("MiniCV");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.ToTable("Hosters");
                });

            modelBuilder.Entity("FreePro.Domain.HosterMeeting", b =>
                {
                    b.Property<int>("MeetingId");

                    b.Property<int>("HosterId");

                    b.HasKey("MeetingId", "HosterId");

                    b.HasIndex("HosterId");

                    b.ToTable("HosterMeetings");
                });

            modelBuilder.Entity("FreePro.Domain.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImgUrl");

                    b.Property<int>("Invited");

                    b.Property<DateTime>("MeetingDate");

                    b.Property<string>("Phone");

                    b.Property<string>("Place");

                    b.Property<string>("Theme");

                    b.HasKey("Id");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("FreePro.Domain.SocialNetwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HosterId");

                    b.Property<int>("MeetingId");

                    b.Property<string>("Name");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("HosterId");

                    b.HasIndex("MeetingId");

                    b.ToTable("SocialNetworks");
                });

            modelBuilder.Entity("FreePro.Domain.Batch", b =>
                {
                    b.HasOne("FreePro.Domain.Meeting", "Meeting")
                        .WithMany("Batches")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FreePro.Domain.HosterMeeting", b =>
                {
                    b.HasOne("FreePro.Domain.Hoster", "Hoster")
                        .WithMany()
                        .HasForeignKey("HosterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FreePro.Domain.Meeting", "Meeting")
                        .WithMany("HosterMeetings")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FreePro.Domain.SocialNetwork", b =>
                {
                    b.HasOne("FreePro.Domain.Hoster", "Hoster")
                        .WithMany("SocialNetworks")
                        .HasForeignKey("HosterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FreePro.Domain.Meeting", "Meeting")
                        .WithMany("SocialNetworks")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
